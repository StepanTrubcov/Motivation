'use client';
import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { X } from "lucide-react";
import styles from "./WinterArc.module.css";

const WinterArc = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [snowflakes, setSnowflakes] = useState([]);

  useEffect(() => {
    const flakes = Array.from({ length: 20 }, () => ({
      left: Math.random() * 100,
      duration: 5 + Math.random() * 4,
      delay: Math.random() * 5,
      size: 6 + Math.random() * 6,
    }));
    setSnowflakes(flakes);
  }, []);

  return (
    <>
      <motion.div
        className={styles.WinterArc}
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
        onClick={() => setIsModalOpen(true)}
      >
        <div className={styles.snowContainer}>
          {snowflakes.map((flake, i) => (
            <span
              key={i}
              className={styles.snowflake}
              style={{
                left: `${flake.left}%`,
                animationDuration: `${flake.duration}s`,
                animationDelay: `${flake.delay}s`,
                fontSize: `${flake.size}px`,
              }}
            >
              ‚ùÑÔ∏è
            </span>
          ))}
        </div>
        ‚ùÑÔ∏è Winter Arc ‚Äî —á—Ç–æ —ç—Ç–æ? ‚ùÑÔ∏è
      </motion.div>

      {/* üå® –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      <AnimatePresence>
        {isModalOpen && (
          <motion.div
            className={styles.modalBackdrop}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.3 }}
            onClick={() => setIsModalOpen(false)}
          >
            <motion.div
              className={styles.modalContent}
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              transition={{ duration: 0.3 }}
              onClick={(e) => e.stopPropagation()}
            >
              <button
                onClick={() => setIsModalOpen(false)}
                className={styles.closeButton}
                aria-label="Close modal"
              >
                <X size={22} />
              </button>

              <h2 className={styles.modalTitle}>‚ùÑÔ∏è Winter Arc</h2>

              <div className={styles.modalText}>
                <p>
                  ‚ú® <b>Winter Arc</b> ‚Äî —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ä–æ—Å—Ç–∞ –∏
                  –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã. –ö–æ–≥–¥–∞ –∑–∞ –æ–∫–Ω–æ–º —Ö–æ–ª–æ–¥–Ω–æ, –º—ã –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —ç–Ω–µ—Ä–≥–∏—é –≤–Ω—É—Ç—Ä—å:
                  —É–∫—Ä–µ–ø–ª—è–µ–º –ø—Ä–∏–≤—ã—á–∫–∏, –¥–µ—Ä–∂–∏–º —Ñ–æ–∫—É—Å –∏ –∏–¥—ë–º –≤–ø–µ—Ä—ë–¥ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∏ –Ω–∞ —á—Ç–æ üí™
                </p>

                <p>üìÖ <b>–ü–µ—Ä–∏–æ–¥:</b> 1 –æ–∫—Ç—è–±—Ä—è 2025 ‚Äî 1 –º–∞—Ä—Ç–∞ 2026</p>

                <p>üî• <b>–¢–≤–æ—è —Ü–µ–ª—å:</b></p>
                <ul>
                  <li>‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Ü–µ–ª–∏</li>
                  <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å</li>
                  <li>‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö üåü</li>
                </ul>

                <p>
                  üí≠ –í –∫–æ–Ω—Ü–µ –∑–∏–º—ã —Ç—ã –æ–≥–ª—è–Ω–µ—à—å—Å—è –Ω–∞–∑–∞–¥ –∏ —É–≤–∏–¥–∏—à—å,  
                  –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–µ–µ —Å—Ç–∞–ª. –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–µ–∑–æ–Ω ‚Äî —ç—Ç–æ —Ç–≤–æ—è –∞—Ä–∫–∞ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
                </p>

                <p className={styles.signature}>–ó–∏–º–∞ –∑–∞–∫–∞–ª—è–µ—Ç —Å–∏–ª—å–Ω—ã—Ö ‚ùÑÔ∏è</p>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};

export default WinterArc;
